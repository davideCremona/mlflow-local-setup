version: '3.8'

services:

  mysql:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - ./mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - backend

  s3:
    image: minio/minio
    restart: always
    volumes:
      - ./s3-data:/data
    ports:
      - "${MINIO_PORT}:9000"
      - "${MINIO_CONSOLE_PORT}:9001"
    networks:
      - frontend
      - backend
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - MINIO_ADDRESS=${MINIO_ADDRESS}
      - MINIO_PORT=${MINIO_PORT}
      - MINIO_STORAGE_USE_HTTPS=${MINIO_STORAGE}
      - MINIO_CONSOLE_ADDRESS=${MINIO_CONSOLE_ADDRESS}
    command: server /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  mlflow-server:
    image: custom-mlflow:python3.12
    restart: always
    depends_on:
      - mysql
    ports:
      - "${MLFLOW_PORT}:5000"
    networks:
      - frontend
      - backend
    volumes:
      - ./mlruns:/mlflow/mlruns
    environment:
      MLFLOW_TRACKING_URI: ${MLFLOW_TRACKING_URI}
      AWS_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      AWS_SECRET_ACCESS_KEY: ${MINIO_SECRET_ACCESS_KEY}
      MLFLOW_S3_ENDPOINT_URL: http://s3:${MINIO_PORT}
      MLFLOW_S3_IGNORE_TLS: true
    command: >
      mlflow server 
      --backend-store-uri ${MLFLOW_TRACKING_URI} 
      --host 0.0.0.0 
      --serve-artifacts 
      --artifacts-destination s3://${MLFLOW_BUCKET_NAME}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${MLFLOW_PORT}/"]
      interval: 30s
      timeout: 10s
      retries: 3
    working_dir: /mlflow

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    depends_on:
      - mysql
    environment:
      PMA_HOST: ${PMA_HOST}
      PMA_USER: ${PMA_USER}
      PMA_PASSWORD: ${PMA_PASSWORD}
    ports:
      - 8080:80
    networks:
      - backend

volumes:
  mysql-data:
  s3-data:

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

